define(["./when-54c2dc71","./Check-6c0211bc","./Math-fc8cecf5","./Cartesian2-a8ce88a9","./Transforms-31e2659a","./RuntimeError-2109023a","./WebGLConstants-76bb35d1","./ComponentDatatype-6d99a1ee","./GeometryAttribute-60f5bf9c","./GeometryAttributes-4fcfcf40","./IndexDatatype-53503fee","./IntersectionTests-836e8b79","./Plane-ef10ab79","./arrayRemoveDuplicates-ebc732b0","./BoundingRectangle-32a0bdd4","./EllipsoidTangentPlane-5d1ab0af","./EllipsoidRhumbLine-a69f63ad","./PolygonPipeline-78886f34","./PolylineVolumeGeometryLibrary-4e0e29a6","./EllipsoidGeodesic-9bc1521b","./PolylinePipeline-150121ba"],function(d,e,t,c,y,i,n,h,f,g,m,a,r,o,l,s,p,u,v,E,b){"use strict";function P(e){var i=(e=d.defaultValue(e,d.defaultValue.EMPTY_OBJECT)).polylinePositions,n=e.shapePositions;this._positions=i,this._shape=n,this._ellipsoid=c.Ellipsoid.clone(d.defaultValue(e.ellipsoid,c.Ellipsoid.WGS84)),this._cornerType=d.defaultValue(e.cornerType,v.CornerType.ROUNDED),this._granularity=d.defaultValue(e.granularity,t.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var a=1+i.length*c.Cartesian3.packedLength;a+=1+n.length*c.Cartesian2.packedLength,this.packedLength=a+c.Ellipsoid.packedLength+2}P.pack=function(e,i,n){var a;n=d.defaultValue(n,0);var t=e._positions,r=t.length;for(i[n++]=r,a=0;a<r;++a,n+=c.Cartesian3.packedLength)c.Cartesian3.pack(t[a],i,n);var o=e._shape,r=o.length;for(i[n++]=r,a=0;a<r;++a,n+=c.Cartesian2.packedLength)c.Cartesian2.pack(o[a],i,n);return c.Ellipsoid.pack(e._ellipsoid,i,n),n+=c.Ellipsoid.packedLength,i[n++]=e._cornerType,i[n]=e._granularity,i};var _=c.Ellipsoid.clone(c.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:_,height:void 0,cornerType:void 0,granularity:void 0};P.unpack=function(e,i,n){i=d.defaultValue(i,0);for(var a=e[i++],t=new Array(a),r=0;r<a;++r,i+=c.Cartesian3.packedLength)t[r]=c.Cartesian3.unpack(e,i);a=e[i++];var o=new Array(a);for(r=0;r<a;++r,i+=c.Cartesian2.packedLength)o[r]=c.Cartesian2.unpack(e,i);var l=c.Ellipsoid.unpack(e,i,_);i+=c.Ellipsoid.packedLength;var s=e[i++],p=e[i];return d.defined(n)?(n._positions=t,n._shape=o,n._ellipsoid=c.Ellipsoid.clone(l,n._ellipsoid),n._cornerType=s,n._granularity=p,n):(k.polylinePositions=t,k.shapePositions=o,k.cornerType=s,k.granularity=p,new P(k))};var C=new l.BoundingRectangle;return P.createGeometry=function(e){var i=e._positions,n=o.arrayRemoveDuplicates(i,c.Cartesian3.equalsEpsilon),a=e._shape,a=v.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(a);if(!(n.length<2||a.length<3)){u.PolygonPipeline.computeWindingOrder2D(a)===u.WindingOrder.CLOCKWISE&&a.reverse();var t=l.BoundingRectangle.fromPoints(a,C);return function(e,i){var n=new g.GeometryAttributes;n.position=new f.GeometryAttribute({componentDatatype:h.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var a=i.length,t=n.position.values.length/3,r=e.length/3/a,o=m.IndexDatatype.createTypedArray(t,2*a*(1+r)),l=0,s=0,p=s*a;for(u=0;u<a-1;u++)o[l++]=u+p,o[l++]=u+p+1;for(o[l++]=a-1+p,o[l++]=p,p=(s=r-1)*a,u=0;u<a-1;u++)o[l++]=u+p,o[l++]=u+p+1;for(o[l++]=a-1+p,o[l++]=p,s=0;s<r-1;s++)for(var d=a*s,c=d+a,u=0;u<a;u++)o[l++]=u+d,o[l++]=u+c;return new f.Geometry({attributes:n,indices:m.IndexDatatype.createTypedArray(t,o),boundingSphere:y.BoundingSphere.fromVertices(e),primitiveType:f.PrimitiveType.LINES})}(v.PolylineVolumeGeometryLibrary.computePositions(n,a,t,e,!1),a)}},function(e,i){return d.defined(i)&&(e=P.unpack(e,i)),e._ellipsoid=c.Ellipsoid.clone(e._ellipsoid),P.createGeometry(e)}});
